name: Capture Virgin macOS Configs

on:
  workflow_dispatch: # Manual trigger only

permissions:
  contents: write
  pull-requests: write

jobs:
  capture-configs:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create virgin directory
        run: mkdir -p config/virgin

      - name: Copy virgin configs
        run: |
          # Copy essential dotfiles
          cd ~
          for file in .bash_profile .bashrc .gitconfig; do
            if [ -e "$file" ]; then
              cp "$file" "$GITHUB_WORKSPACE/config/virgin/"
            fi
          done

          # Create .config structure
          mkdir -p "$GITHUB_WORKSPACE/config/virgin/.config"

          # Copy only essential .config contents (no caches/temp files)
          if [ -d ~/.config ]; then
            cd ~/.config
            for dir in $(ls -A | grep -vE 'cache|temp|tmp'); do
              if [ -d "$dir" ] && [ ! -L "$dir" ]; then
                # Get size
                size=$(du -sm "$dir" | cut -f1)
                if [ "$size" -lt 10 ]; then  # Only copy if less than 10MB
                  cp -R "$dir" "$GITHUB_WORKSPACE/config/virgin/.config/"
                else
                  echo "Skipping $dir (${size}MB - too large)"
                fi
              fi
            done
          fi

          # Create .ssh structure (no keys)
          mkdir -p "$GITHUB_WORKSPACE/config/virgin/.ssh"
          if [ -d ~/.ssh ]; then
            cd ~/.ssh
            for file in config known_hosts; do
              if [ -f "$file" ]; then
                cp "$file" "$GITHUB_WORKSPACE/config/virgin/.ssh/"
              fi
            done
          fi

          echo "=== Captured Files ==="
          cd "$GITHUB_WORKSPACE/config/virgin"
          find . -type f | sort

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Create commit and push
        run: |
          # Generate unique branch name with timestamp
          BRANCH_NAME="capture-virgin-configs-$(date +%Y%m%d-%H%M%S)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

          git add config/virgin/
          git commit -m "chore: capture virgin macOS configs"
          git push origin HEAD:"$BRANCH_NAME"

      - name: Create PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "chore: capture complete set of virgin macOS configs" \
            --body "Automated PR to capture virgin macOS configurations" \
            --base main \
            --head "$BRANCH_NAME"
